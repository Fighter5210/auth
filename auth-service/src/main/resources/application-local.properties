##两个库名
#spring.sharding.jdbc.datasource.names=user0,user1
#
##第一个库的配置信息
#spring.sharding.jdbc.datasource.user0.type=org.apache.commons.dbcp.BasicDataSource
#spring.sharding.jdbc.datasource.user0.driver-class-name=com.mysql.jdbc.Driver
#spring.sharding.jdbc.datasource.user0.url=jdbc:mysql://localhost:3306/user0
#spring.sharding.jdbc.datasource.user0.username=root
#spring.sharding.jdbc.datasource.user0.password=123456
#
##第二个库的配置信息
#spring.sharding.jdbc.datasource.user1.type=org.apache.commons.dbcp.BasicDataSourcesharding.jdbc.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
#spring.sharding.jdbc.datasource.user1.url=jdbc:mysql://localhost:3306/user1
#spring.sharding.jdbc.datasource.user1.username=root
#spring.sharding.jdbc.datasource.user1.password=123456
#
##用户表的配置信息
#spring.sharding.jdbc.config.sharding.tables.t_user.actual-data-nodes=user$->{0..1}.t_user$->{0..1}
#spring.sharding.jdbc.config.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id
#spring.sharding.jdbc.config.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user->{user_id % 2}
#spring.sharding.jdbc.config.sharding.tables.t_user.key-generator-column-name=id
#
##用户明细表的配置信息
#spring.sharding.jdbc.config.sharding.tables.t_user_detail.actual-data-nodes=user$->{0..1}.t_user_detail$->{0..1}
#spring.sharding.jdbc.config.sharding.tables.t_user_detail.table-strategy.inline.sharding-column=user_id
#spring.sharding.jdbc.config.sharding.tables.t_user_detail.table-strategy.inline.algorithm-expression=t_user_detail$->{user_id % 2}
#spring.sharding.jdbc.config.sharding.tables.t_user_detail.key-generator-column-name=id
#
##用户表和用户明细表的绑定关系
#spring.sharding.jdbc.config.sharding.binding-tables=t_user,t_user_detail
#spring.sharding.jdbc.config.sharding.broadcast-tables=t_config
##默认配置
#spring.sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
